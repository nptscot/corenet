- coherent network
- intermediate zone
- od data

```{r}
library(sf)
library(dplyr)
library(igraph)
library(ggraph)
library(ggplot2)
library(mapview)
library(lwgeom)
library(igraph)
library(tidygraph)
library(sfnetworks)
library(units)
source("R/net_eval.R")
```

```{r}
rnet_core = sf::st_read("network_eval_file/combined_CN_3_2024-12-01_OS.geojson")

intermediate_zone = sf::st_read("network_eval_file/SG_IntermediateZone_Bdry_2011.gpkg")
intermediate_zone$geometry = intermediate_zone$geom

od_data = readRDS("network_eval_file/desire_lines.Rds")

lads = sf::read_sf("network_eval_file/la_regions_scotland_bfe_simplified_2023.geojson") |> st_transform(27700)

rnet_npt = sf::st_read("network_eval_file/combined_network_tile.geojson") |> st_transform(27700)

# Define target CRS
crs_target = 27700
# Transform datasets to the target CRS
rnet_core = st_transform(rnet_core, crs = crs_target)
intermediate_zone = st_transform(intermediate_zone, crs = crs_target)
od_data = st_transform(od_data, crs = crs_target)
lads = st_transform(lads, crs = crs_target)
```
```{r}
city_names = c("Glasgow City", "City of Edinburgh", "Aberdeen City", "Dundee City", "Stirling")

for (city_name in city_names[2]) {
  generate_radar_chart(
    city_name = city_name,
    rnet_core = rnet_core,
    lads = lads,
    intermediate_zone = intermediate_zone,
    rnet_npt = rnet_npt,
    crs_target = crs_target,
    od_data = od_data,
    dist_threshold = 500,
    buffer_distance = 500,
    save_path = glue::glue("./plot/", city_name , "_radar_chart.jpg")
  )
}

```

